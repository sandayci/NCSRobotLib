213c213
< 	    			num_latches = 5;
---
> 	    num_latches = 5;
215,224c215,223
< 						for (i=0; i<num_latches; i++) {
< 							bits = offset;
< 							bits += synapse->target;
< 							bits += (synapse->source) << 8;
< 							bits += latches[i] << 16; //sr     //in case the selected option (latch) is high set the sr to 1, otherwise 0
< 							bits += i << 17;					//latch  //the value of the index equals the latch value 
< 							// printf ("Setting bits %d\n", bits);
< 							aerWriteMem(bits); //you can not set several latches at the same time only one  by one
< 						}
< 						usleep(10);
---
> 	    for (i=0; i<num_latches; i++) {
> 		bits = offset;
> 		bits += synapse->target;
> 		bits += (synapse->source) << 8;
> 		bits += latches[i] << 16; //sr     //in case the selected option (latch) is high set the sr to 1, otherwise 0
> 		bits += i << 17;					//latch  //the value of the index equals the latch value 
> 	        aerWriteMem(bits); //you can not set several latches at the same time only one  by one
> 	     }
> 	     usleep(10);
227,255c226,253
< 						//setting connection
<             uint32_t latches_p[2];
<             latches_p[0] = synapse->recurrent; //recurrent
<             latches_p[1] = 0; //broadcast not used at the moment
< 	     int     num_latches_p = 2;
<             uint32_t offset_p = 788992;
< 						for (i=0; i<num_latches_p; i++) {
< 							bits = offset_p;
< 							bits += synapse->target;
< 							bits += (synapse->source) << 8;
< 							bits += latches_p[i] << 16; //sr     //in case the selected option (latch) is high set the sr to 1, otherwise 0
< 							bits += i << 17;					//latch //the value of the index equals the latch value 
< //                             printf ("target: %d source: %d latches[i]: %d  i: %d = Setting bits %d\n",synapse->target, synapse->source, latches[i], i, bits);
< 							aerWriteMem(bits); //you can not set several latches at the same time only one  by one
< 						}
< 						usleep(10);
< 
< 						//setting existing plastic connection to high/low
<             plastic_w = synapse->wgt1; //wgt1 , wgt2 ignored (1bin weight encoding)
<             offset_p = 1051136;
< 						bits = offset_p;
< 						bits += synapse->target;
< 						bits += (synapse->source) << 8;
< 						bits += plastic_w << 16;	//hl //high or low weight
<                         // printf ("target: %d source: %d weight: %d  = Setting bits %d\n",synapse->target, synapse->source, plastic_w, bits);
< 						// printf ("Setting bits %d\n", bits);
< 						aerWriteMem(bits);
< 						usleep(10);
< 	}
---
> 	//setting connection
>             uint32_t latches[2];
>             latches[0] = synapse->recurrent; //recurrent
>             latches[1] = 0; //broadcast not used at the moment
> 	    num_latches = 2;
>             offset = 788992;
> 	    for (i=0; i<num_latches; i++) 
> 	    {
> 		bits = offset;
> 		bits += synapse->target;
> 		bits += (synapse->source) << 8;
> 		bits += latches[i] << 16; //sr     //in case the selected option (latch) is high set the sr to 1, otherwise 0
> 		bits += i << 17;					//latch //the value of the index equals the latch value 
> 		aerWriteMem(bits); //you can not set several latches at the same time only one  by one
> 	     }
> 	     usleep(10);
> 
> 	//setting existing plastic connection to high/low
>        		plastic_w = synapse->wgt1; //wgt1 , wgt2 ignored (1bin weight encoding)
>         	offset = 1051136;
> 		bits = offset;
> 		bits += synapse->target;
> 		bits += (synapse->source) << 8;
> 		bits += plastic_w << 16;	//hl //high or low weight
>         	// printf ("target: %d source: %d weight: %d  = Setting bits %d\n",synapse->target, synapse->source, plastic_w, bits);
> 		aerWriteMem(bits);
> 		usleep(10);
> 	}	
274,330d271
<  void aerMonSomaSyn(uint32_t n, uint32_t s) {
<          aerWriteBits(1249024);     //assert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1249025);     //deassert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1249284 + n); //monitor neuron n
<          usleep(100*1000);
<          aerWriteBits(1182208 + (s*256) + n); //monitor synapse s of neuron n
<          usleep(100*1000);
<          aerWriteBits(1249025);     //deassert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1249284 + n); //monitor neuron n
<          usleep(100*1000);
<          aerWriteBits(1182208 + (s*256) + n); //monitor synapse s of neuron n
<      }
<  
<  void aerSetSynHi(uint32_t n2, uint32_t s2) {
<          aerWriteBits(1249024);     //assert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1249025);     //deassert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1051136 + (1*256*256) + (s2*256) + n2); //set synapse s of neuron n high
<          usleep(100*1000);
<          aerWriteBits(1249284 + n2); //monitor neuron n
<          usleep(100*1000);
<          aerWriteBits(1182208 + (s2*256) + n2); //monitor synapse s of neuron n
<          usleep(100*1000);
<          aerWriteBits(1249025);     //deassert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1051136 + (1*256*256) + (s2*256) + n2); //set synapse s of neuron n high
<          usleep(100*1000);
<          aerWriteBits(1249284 + n2); //monitor neuron n
<          usleep(100*1000);
<          aerWriteBits(1182208 + (s2*256) + n2); //monitor synapse s of neuron n
<  }
<  
<  void aerSetSynLo(uint32_t n3, uint32_t s3) {
<          aerWriteBits(1249024);     //assert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1249025);     //deassert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1051136 + (0*256*256) + (s3*256) + n3); //set synapse s of neuron n low
<          usleep(100*1000);
<          aerWriteBits(1249284 + n3); //monitor neuron n
<          usleep(100*1000);
<          aerWriteBits(1182208 + (s3*256) + n3); //monitor synapse s of neuron n
<          usleep(100*1000);
<          aerWriteBits(1249025);     //deassert all reset lines
<          usleep(100*1000);
<          aerWriteBits(1051136 + (0*256*256) + (s3*256) + n3); //set synapse s of neuron n low
<          usleep(100*1000);
<          aerWriteBits(1249284 + n3); //monitor neuron n
<          usleep(100*1000);
<          aerWriteBits(1182208 + (s3*256) + n3); //monitor synapse s of neuron n
<      }
< 
< 
336,338c277,279
<     	    Synapse synapse;
<     			synapse.type = type;
<     	    synapse.recurrent = DISABLE;
---
>     	  Synapse synapse;
>     	  synapse.type = type;
>     	  synapse.recurrent = DISABLE;
345,346c286,287
<         	if(aerSetConn(&synapse) < 0)
<     					printf("an error occured while setting synapse\n");
---
>           if(aerSetConn(&synapse) < 0)
>     		printf("an error occured while setting synapse\n");
